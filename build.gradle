import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'maven'
    id 'java'
    id 'java-library'
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
//    id "org.jetbrains.kotlin.kapt" version "1.3.10"
    id "com.github.johnrengelman.shadow" version '5.1.0'
}

// jitpack
group = 'com.github.kotlin-graphics'

ext{
    moduleName = 'com.github.kotlin_graphics.vkk'
    kotlin = 'org.jetbrains.kotlin:kotlin'
    kotlin_version = '1.3.41'
    gln_version = '6631fe89c698a0b8e8f27f07e1123ee9b3f7b417'
    gli_version = '35fd742487eb585ce6807b782c4a9073b56a5f2a'
    glm_version = '96b8303d99a3d8cf0245c490b8fb4ca703393baa'
    unsigned_version = '6a5060027e295c503e4fac39127bdd57c36c7083'
    kool_version = '7b1e0522d1fe5a7d1a276f4d46b2e24be9e444cb'
    lwjgl_version = "3.2.2"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
    sprivCross_version = "0.5.0-1.1.85"
}

dependencies {

    implementation "$kotlin-stdlib"
    implementation "$kotlin-reflect"

    def kx = "com.github.kotlin-graphics"
    implementation "$kx:gln:$gln_version"
    implementation "$kx:gli:$gli_version"
    implementation "${kx}.glm:glm:$glm_version"
    implementation "$kx:kool:$kool_version"
    implementation "$kx:kotlin-unsigned:$unsigned_version"

    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb", "-vulkan"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        if (it != "-vulkan")
            runtime "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }

    ext.spirvCross = "graphics.scenery:spirvcrossj:$sprivCross_version"
    implementation spirvCross
    runtime "$spirvCross:natives-$lwjgl_natives"

//    compile group: 'org.jetbrains.kotlin.kapt', name: 'org.jetbrains.kotlin.kapt.gradle.plugin', version: '1.3.0-rc-146'
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

jar {
    inputs.property("moduleName", moduleName)
//    manifest.attributes('Automatic-Module-Name': moduleName)
}

compileKotlin {
    // Enable Kotlin compilation to Java 8 class files with method parameter name metadata
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses", "-Xjvm-default=enable"]
        jvmTarget = "1.8"
//        javaParameters = true
    }
    // As per https://stackoverflow.com/a/47669720
    // See also https://discuss.kotlinlang.org/t/kotlin-support-for-java-9-module-system/2499/9
    destinationDir = compileJava.destinationDir
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
//        javaParameters = true
    }
}

compileJava {
    dependsOn(':compileKotlin')
    doFirst {
        options.compilerArgs = ['--module-path', classpath.asPath,]
        classpath = files()
    }
}

shadowJar.archiveClassifier = 'all'